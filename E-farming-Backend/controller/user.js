const bcrypt = require("bcrypt");
const User = require("../models/User.js");
const path = require('path')

async function handleUserUpdate(req, res) {
  try {
    const userId = req.userId; 

    const user = await User.findById(userId);
    if (!user) {
      return res.status(404).json({ status: false, message: "User not found" });
    }

    const { name, email, password } = req.body;
    console.log("Received body:", req.body);

    if (typeof name === "string" && name.trim() !== "") {
      user.name = name.trim();
    }

    if (typeof email === "string" && email.trim() !== "") {
      user.email = email.trim();
    }

    if (typeof password === "string" && password.trim() !== "") {
      const hashedPassword = await bcrypt.hash(password.trim(), 10);
      user.password = hashedPassword;
    }

    const updatedUser = await user.save();

    const updatedData = {
      ...(typeof name === "string" && name.trim() !== "" && { name: name.trim() }),
      ...(typeof email === "string" && email.trim() !== "" && { email: email.trim() }),
    };

    console.log("Updated Data Sent Back:", updatedData);

    return res.status(200).json({
      status: true,
      message: "User updated successfully",
      updatedData,
    });

  } catch (error) {
    console.error("Error during user update:", error.message);
    return res.status(500).json({
      status: false,
      message: "An error occurred while updating the user. Please try again later.",
    });
  }
}


const handleImageUpload = async (req, res) => {
  console.log(req.file)
  console.log("hello")
  try {
    if (!req.file) {
      return res.status(400).json({ message: "No image file uploaded." });
    }

    // The filename is automatically generated by Multer
    const imageUrl = path.join("uploads", req.file.filename);  // e.g., "uploads/1630424312394.jpg"
    console.log("image arrived")
    
    // Now you can save the image URL to the user's document in the database
    const updatedUser = await User.findByIdAndUpdate(
      req.userId,
      { image: imageUrl },
    );

    return res.status(200).json({
      status: "success", // 
      message: "Image uploaded successfully",
      image: imageUrl,
    });
    
  } catch (error) {
    console.error(error);
    return res.status(500).json({ message: "no respond" });
  }
};



module.exports = { handleUserUpdate, handleImageUpload };
